pipeline {
  agent none

  stages {
    stage('Build and Test') {
      agent {
        docker {
          image 'maven:3.9.4-eclipse-temurin-17'
          args '--user root -v /var/run/docker.sock:/var/run/docker.sock'
        }
      }
      steps {
        sh '''
          cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
          mvn clean package
        '''
      }
    }

    stage('Static Code Analysis') {
      agent {
        docker {
          image 'maven:3.9.4-eclipse-temurin-17'
          args '--user root -v /var/run/docker.sock:/var/run/docker.sock'
        }
      }
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          sh '''
            cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
            mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=$SONAR_URL
          '''
        }
      }
    }

    stage('Build and Push Docker Image') {
      agent {
        docker {
          image 'maven:3.9.4-eclipse-temurin-17'
          args '--user root -v /var/run/docker.sock:/var/run/docker.sock'
        }
      }
      steps {
        withCredentials([usernamePassword(credentialsId: 'docker-cred', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
          sh '''
            apt-get update && apt-get install -y docker.io
            cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
            docker build -t ${DOCKER_IMAGE} .
            echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
            docker push ${DOCKER_IMAGE}
          '''
        }
      }
    }

    // âœ… Native Jenkins agent for git commit/push
    stage('Update Deployment File') {
      agent any
      steps {
        withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
          sh '''
            git config user.email "rajuaws55@gmail.com"
            git config user.name "raju0509"
            sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
            git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
            git commit -m "Update deployment image to version ${BUILD_NUMBER}"
            git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
          '''
        }
      }
    }
  }

  environment {
    SONAR_URL = "http://3.86.115.92:9000"
    DOCKER_IMAGE = "rajujilla/ultimate-cicd:${BUILD_NUMBER}"
    GIT_REPO_NAME = "Jenkins-Zero-To-Hero"
    GIT_USER_NAME = "raju0509"
  }
}
